{"ast":null,"code":"// frontend/services/api.js\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || process.env.REACT_APP_API_URL || \"https://backend-task-7g1k.onrender.com/api\",\n  withCredentials: true,\n  timeout: 10000,\n  // timeout après 10 secondes\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Exporte l'origine backend (ex: http://localhost:5000) pour les liens statiques\nexport const BACKEND_ORIGIN = (() => {\n  try {\n    const url = new URL(api.defaults.baseURL);\n    // Si baseURL finit par /api, on remonte d'un niveau\n    return url.pathname.replace(/\\/?api\\/?$/, '') ? `${url.origin}${url.pathname.replace(/\\/?api\\/?$/, '')}` : url.origin;\n  } catch {\n    // fallback si baseURL n'est pas une URL absolue\n    return 'http://localhost:5000';\n  }\n})();\n\n// Intercepteur pour les requêtes\napi.interceptors.request.use(config => {\n  // Récupération robuste du token (selon la clé utilisée au login)\n  let token = localStorage.getItem('userToken');\n  if (!token) token = localStorage.getItem('token');\n  if (!token) {\n    try {\n      var _JSON$parse;\n      token = (_JSON$parse = JSON.parse(localStorage.getItem('userInfo') || '{}')) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n    } catch {/* noop */}\n  }\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Intercepteur pour les réponses\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expiré ou invalide → nettoyer et rediriger si pas déjà sur /login\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('token');\n    localStorage.removeItem('userInfo');\n    // Ne pas forcer de redirection immédiate ici pour éviter les rebonds; laisser les gardes de route décider.\n  }\n  return Promise.reject(error);\n});\nexport default api;\n\n// Helpers profil\nexport const updateProfile = async payload => {\n  const {\n    data\n  } = await api.put('/users/me', payload);\n  // Mettre à jour le localStorage si nécessaire\n  const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n  const merged = {\n    ...userInfo,\n    ...data.user\n  };\n  localStorage.setItem('userInfo', JSON.stringify(merged));\n  return data;\n};\nexport const uploadAvatar = async file => {\n  const form = new FormData();\n  form.append('avatar', file);\n  const {\n    data\n  } = await api.post('/users/me/avatar', form, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data; // { url }\n};\n\n// Admin helpers\nexport const adminListUsers = async () => (await api.get('/users/admin')).data;\nexport const adminDeleteUser = async id => (await api.delete(`/users/admin/${id}`)).data;\nexport const adminResetPassword = async (id, newPassword) => (await api.post(`/users/admin/${id}/reset-password`, {\n  newPassword\n})).data;\nexport const adminCreateProject = async payload => (await api.post('/projects', payload)).data;\nexport const adminListProjects = async () => (await api.get('/projects')).data;\nexport const adminDeleteProject = async id => (await api.delete(`/projects/${id}`)).data;\nexport const adminUpdateProjectMembers = async (id, payload) => (await api.put(`/projects/${id}/members`, payload)).data;\nexport const adminListAllTasks = async () => (await api.get('/tasks/admin/all')).data;\nexport const adminAssignTask = async (id, userId) => (await api.post(`/tasks/admin/${id}/assign`, {\n  userId\n})).data;\nexport const adminValidateTask = async id => (await api.post(`/tasks/admin/${id}/validate`)).data;\nexport const adminMarkTaskDone = async id => (await api.post(`/tasks/admin/${id}/done`)).data;\nexport const adminTeamStats = async () => (await api.get('/tasks/admin/stats')).data;\nexport const adminReviewProgress = async (taskId, reportId, decision, comment = '', progress) => {\n  const body = {\n    decision,\n    comment\n  };\n  if (progress !== undefined && progress !== null) body.progress = progress;\n  return (await api.post(`/tasks/admin/${taskId}/progress/${reportId}/review`, body)).data;\n};\n\n// Créer une tâche projet (avec pièces jointes)\nexport const adminCreateProjectTask = async ({\n  title,\n  description,\n  dueDate,\n  priority = 'medium',\n  projectId,\n  assignedTo = [],\n  files = []\n}) => {\n  const form = new FormData();\n  form.append('title', title);\n  if (description) form.append('description', description);\n  if (dueDate) form.append('dueDate', dueDate);\n  if (priority) form.append('priority', priority);\n  form.append('projectId', projectId);\n  // assignedTo peut être un tableau\n  (Array.isArray(assignedTo) ? assignedTo : [assignedTo]).filter(Boolean).forEach(id => form.append('assignedTo', id));\n  (files || []).forEach(f => form.append('files', f));\n  const {\n    data\n  } = await api.post('/tasks/admin/project-task', form, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data;\n};\n\n// Task participation & progress\nexport const acceptTaskApi = async id => (await api.post(`/tasks/${id}/accept`)).data;\nexport const declineTaskApi = async id => (await api.post(`/tasks/${id}/decline`)).data;\nexport const submitProgressApi = async (id, content, files = []) => {\n  const form = new FormData();\n  form.append('content', content);\n  files.forEach(f => form.append('files', f));\n  const {\n    data\n  } = await api.post(`/tasks/${id}/progress`, form, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data;\n};\nexport const getTaskReports = async id => (await api.get(`/tasks/${id}/progress`)).data;\n\n// Notifications\nexport const listNotifications = async () => (await api.get('/notifications')).data;\nexport const markNotificationRead = async id => (await api.post(`/notifications/${id}/read`)).data;\nexport const deleteNotification = async id => (await api.delete(`/notifications/${id}`)).data;\nexport const deleteAllNotifications = async () => (await api.delete(`/notifications`)).data;\n\n// Users (basic list for shared tasks)\nexport const listUsersBasic = async () => (await api.get('/users/list-basic')).data;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_BASE_URL","REACT_APP_API_URL","withCredentials","timeout","headers","BACKEND_ORIGIN","url","URL","defaults","pathname","replace","origin","interceptors","request","use","config","token","localStorage","getItem","_JSON$parse","JSON","parse","Authorization","error","Promise","reject","response","_error$response","status","removeItem","updateProfile","payload","data","put","userInfo","merged","user","setItem","stringify","uploadAvatar","file","form","FormData","append","post","adminListUsers","get","adminDeleteUser","id","delete","adminResetPassword","newPassword","adminCreateProject","adminListProjects","adminDeleteProject","adminUpdateProjectMembers","adminListAllTasks","adminAssignTask","userId","adminValidateTask","adminMarkTaskDone","adminTeamStats","adminReviewProgress","taskId","reportId","decision","comment","progress","body","undefined","adminCreateProjectTask","title","description","dueDate","priority","projectId","assignedTo","files","Array","isArray","filter","Boolean","forEach","f","acceptTaskApi","declineTaskApi","submitProgressApi","content","getTaskReports","listNotifications","markNotificationRead","deleteNotification","deleteAllNotifications","listUsersBasic"],"sources":["C:/Users/LENOVO/Documents/Task-Management-Application-main/frontend/src/services/api.js"],"sourcesContent":["// frontend/services/api.js\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || process.env.REACT_APP_API_URL || \"https://backend-task-7g1k.onrender.com/api\",\n  withCredentials: true,\n  timeout: 10000, // timeout après 10 secondes\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Exporte l'origine backend (ex: http://localhost:5000) pour les liens statiques\nexport const BACKEND_ORIGIN = (() => {\n  try {\n    const url = new URL(api.defaults.baseURL);\n    // Si baseURL finit par /api, on remonte d'un niveau\n    return url.pathname.replace(/\\/?api\\/?$/, '')\n      ? `${url.origin}${url.pathname.replace(/\\/?api\\/?$/, '')}`\n      : url.origin;\n  } catch {\n    // fallback si baseURL n'est pas une URL absolue\n    return 'http://localhost:5000';\n  }\n})();\n\n// Intercepteur pour les requêtes\napi.interceptors.request.use(\n  (config) => {\n    // Récupération robuste du token (selon la clé utilisée au login)\n    let token = localStorage.getItem('userToken');\n    if (!token) token = localStorage.getItem('token');\n    if (!token) {\n      try { token = JSON.parse(localStorage.getItem('userInfo') || '{}')?.token; } catch { /* noop */ }\n    }\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Intercepteur pour les réponses\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expiré ou invalide → nettoyer et rediriger si pas déjà sur /login\n      localStorage.removeItem('userToken');\n      localStorage.removeItem('token');\n      localStorage.removeItem('userInfo');\n      // Ne pas forcer de redirection immédiate ici pour éviter les rebonds; laisser les gardes de route décider.\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n\n// Helpers profil\nexport const updateProfile = async (payload) => {\n  const { data } = await api.put('/users/me', payload);\n  // Mettre à jour le localStorage si nécessaire\n  const userInfo = JSON.parse(localStorage.getItem('userInfo') || '{}');\n  const merged = { ...userInfo, ...data.user };\n  localStorage.setItem('userInfo', JSON.stringify(merged));\n  return data;\n};\n\nexport const uploadAvatar = async (file) => {\n  const form = new FormData();\n  form.append('avatar', file);\n  const { data } = await api.post('/users/me/avatar', form, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  });\n  return data; // { url }\n};\n\n// Admin helpers\nexport const adminListUsers = async () => (await api.get('/users/admin')).data;\nexport const adminDeleteUser = async (id) => (await api.delete(`/users/admin/${id}`)).data;\nexport const adminResetPassword = async (id, newPassword) => (await api.post(`/users/admin/${id}/reset-password`, { newPassword })).data;\n\nexport const adminCreateProject = async (payload) => (await api.post('/projects', payload)).data;\nexport const adminListProjects = async () => (await api.get('/projects')).data;\nexport const adminDeleteProject = async (id) => (await api.delete(`/projects/${id}`)).data;\nexport const adminUpdateProjectMembers = async (id, payload) => (await api.put(`/projects/${id}/members`, payload)).data;\n\nexport const adminListAllTasks = async () => (await api.get('/tasks/admin/all')).data;\nexport const adminAssignTask = async (id, userId) => (await api.post(`/tasks/admin/${id}/assign`, { userId })).data;\nexport const adminValidateTask = async (id) => (await api.post(`/tasks/admin/${id}/validate`)).data;\nexport const adminMarkTaskDone = async (id) => (await api.post(`/tasks/admin/${id}/done`)).data;\nexport const adminTeamStats = async () => (await api.get('/tasks/admin/stats')).data;\nexport const adminReviewProgress = async (taskId, reportId, decision, comment = '', progress) => {\n  const body = { decision, comment };\n  if (progress !== undefined && progress !== null) body.progress = progress;\n  return (await api.post(`/tasks/admin/${taskId}/progress/${reportId}/review`, body)).data;\n};\n\n// Créer une tâche projet (avec pièces jointes)\nexport const adminCreateProjectTask = async ({ title, description, dueDate, priority = 'medium', projectId, assignedTo = [], files = [] }) => {\n  const form = new FormData();\n  form.append('title', title);\n  if (description) form.append('description', description);\n  if (dueDate) form.append('dueDate', dueDate);\n  if (priority) form.append('priority', priority);\n  form.append('projectId', projectId);\n  // assignedTo peut être un tableau\n  (Array.isArray(assignedTo) ? assignedTo : [assignedTo]).filter(Boolean).forEach(id => form.append('assignedTo', id));\n  (files || []).forEach(f => form.append('files', f));\n  const { data } = await api.post('/tasks/admin/project-task', form, { headers: { 'Content-Type': 'multipart/form-data' } });\n  return data;\n};\n\n// Task participation & progress\nexport const acceptTaskApi = async (id) => (await api.post(`/tasks/${id}/accept`)).data;\nexport const declineTaskApi = async (id) => (await api.post(`/tasks/${id}/decline`)).data;\nexport const submitProgressApi = async (id, content, files=[]) => {\n  const form = new FormData();\n  form.append('content', content);\n  files.forEach(f => form.append('files', f));\n  const { data } = await api.post(`/tasks/${id}/progress`, form, { headers: { 'Content-Type': 'multipart/form-data' } });\n  return data;\n};\nexport const getTaskReports = async (id) => (await api.get(`/tasks/${id}/progress`)).data;\n\n// Notifications\nexport const listNotifications = async () => (await api.get('/notifications')).data;\nexport const markNotificationRead = async (id) => (await api.post(`/notifications/${id}/read`)).data;\nexport const deleteNotification = async (id) => (await api.delete(`/notifications/${id}`)).data;\nexport const deleteAllNotifications = async () => (await api.delete(`/notifications`)).data;\n\n// Users (basic list for shared tasks)\nexport const listUsersBasic = async () => (await api.get('/users/list-basic')).data;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}